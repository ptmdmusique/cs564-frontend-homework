@tailwind base;
@tailwind components;
@tailwind utilities;

$theme: (
  --text-base: "rgb(238,239,220)",
  --text-primary: "rgb(238,239,220)",
  --text-secondary: "rgb(213,209,194)",

  --background: "rgb(52,69,89)",
  --background-top: "rgb(14,14,14)",

  // Other
  --danger: "rgb(169, 30, 41)",
  --success: "rgb(36, 86, 48)",
  --warning: "rgb(92, 70, 0)",
  --info: "rgb(29, 84, 94)",
  --disabled: "rgb(186, 187, 175)",
);

/// Replace `$search` with `$replace` in `$string`
/// @author Kitty Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }

  @return $string;
}

@function get-color-value($color) {
  @return #{unquote(str-replace(str-replace($color, "rgb(", ""), ")", ""))};
}

@mixin extract-color-map($map) {
  @each $key, $value in $map {
    #{$key}: #{get-color-value($value)};
  }
}

body {
  @include extract-color-map($theme);
  @apply text-skin-default;
  @apply overflow-x-hidden;
  @apply min-h-screen;
  @apply bg-skin-top;
  @apply relative;

  --mobile-content-padding: theme(padding.5);
  --desktop-content-padding: theme(padding.6);
  --content-max-width: 70rem;
}
